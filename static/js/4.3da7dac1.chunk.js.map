{"version":3,"sources":["components/TextHtmlEditor/TextHtmlEditor.styled.ts","components/TextHtmlEditor/TextHtmlEditor.tsx","pages/EditorPage/EditorPage.tsx"],"names":["TextHtmlEditorContainer","styled","div","colors","blackOpacity03","blackOpacity01","TextHtmlEditorButtons","TextHtmlEditor","props","textArea","copySuccess","onEditorStateChange","editorState","setState","onClearButtonClick","EditorState","createEmpty","onCopeButtonClick","select","document","execCommand","focus","state","this","wrapperClassName","editorClassName","value","draftToHtml","convertToRaw","getCurrentContent","ref","textarea","readOnly","Button","onClick","ariaLabel","styles","margin","marginRight","Typography","fontSize","Component","EditorPage"],"mappings":"0QAIMA,EAA0BC,IAAOC,IAAV,opBAqBLC,IAAOC,eAGPD,IAAOE,eAcPF,IAAOC,eAGPD,IAAOE,gBAIzBC,EAAwBL,IAAOC,IAAV,iG,gBCsDZK,E,kDApFb,WAAYC,GAAa,IAAD,8BACtB,cAAMA,IAJRC,cAGwB,IAFxBC,iBAEwB,IAQxBC,oBAA2B,SAACC,GAC1B,EAAKC,SAAS,CACZD,cACAF,aAAa,KAXO,EAexBI,mBAAqB,WACnB,EAAKD,SAAS,CACZD,YAAaG,cAAYC,cACzBN,aAAa,KAlBO,EAsBxBO,kBAAoB,WAClB,EAAKR,SAASS,SACdC,SAASC,YAAY,QACrB,EAAKX,SAASY,QACd,EAAKR,SAAS,CAAEH,aAAa,KAxB7B,EAAKY,MAAQ,CACXV,YAAaG,cAAYC,cACzBN,aAAa,GAJO,E,0CA6BxB,WAAU,IAAD,OACP,EAA0Ca,KAAKD,MAAvCV,EAAR,EAAQA,YAAaF,EAArB,EAAqBA,YAErB,OACE,eAACV,EAAD,WACE,cAAC,SAAD,CACEY,YAAaA,EACbY,iBAAiB,eACjBC,gBAAgB,cAChBd,oBAAqBY,KAAKZ,sBAE5B,0BACEe,MAAOC,IAAYC,uBAAahB,EAAYiB,sBAC5CC,IAAK,SAACC,GAAD,OAAe,EAAKtB,SAAWsB,GACpCC,UAAQ,IAGV,eAAC1B,EAAD,WACE,cAAC2B,EAAA,EAAD,CACEC,QAASX,KAAKT,mBACdqB,UAAU,eACVC,OAAQ,CAAEC,OAAQ,EAAGC,YAAa,IAHpC,mBAQA,cAACL,EAAA,EAAD,CACEC,QAASX,KAAKN,kBACdkB,UAAU,OACVC,OAAQ,CAAEC,OAAQ,GAHpB,SAKG3B,EACC,cAAC6B,EAAA,EAAD,CACEH,OAAQ,CACNI,SAAU,QAFd,8BAQA,cAACD,EAAA,EAAD,CACEH,OAAQ,CACNI,SAAU,QAFd,wC,GAzEeC,aCHdC,UARY,WACzB,OACE,8BACE,cAAC,EAAD","file":"static/js/4.3da7dac1.chunk.js","sourcesContent":["import styled from \"styled-components\";\r\n\r\nimport { colors } from \"styles/colors\";\r\n\r\nconst TextHtmlEditorContainer = styled.div`\r\n  display: block;\r\n\r\n  width: 1200px;\r\n  height: 100vh;\r\n\r\n  margin: 0 auto;\r\n  margin-bottom: 25px;\r\n\r\n  .demo-wrapper.rdw-editor-wrapper {\r\n    display: block;\r\n\r\n    min-height: 450px;\r\n  }\r\n\r\n  .demo-editor.rdw-editor-main {\r\n    min-height: 350px;\r\n\r\n    margin-bottom: 25px;\r\n    padding: 5px;\r\n\r\n    border: 2px solid ${colors.blackOpacity03};\r\n    border-radius: 15px;\r\n\r\n    background-color: ${colors.blackOpacity01};\r\n  }\r\n\r\n  textarea {\r\n    display: block;\r\n\r\n    width: 100%;\r\n    min-height: 350px;\r\n\r\n    padding: 5px;\r\n\r\n    font-size: 18px;\r\n    font-weight: bold;\r\n\r\n    border: 2px solid ${colors.blackOpacity03};\r\n    border-radius: 15px;\r\n\r\n    background-color: ${colors.blackOpacity01};\r\n  }\r\n`;\r\n\r\nconst TextHtmlEditorButtons = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n\r\n  margin-top: 25px;\r\n`;\r\n\r\nexport { TextHtmlEditorContainer, TextHtmlEditorButtons };\r\n","import { Component } from \"react\";\r\nimport { EditorState, convertToRaw } from \"draft-js\";\r\nimport { Editor } from \"react-draft-wysiwyg\";\r\nimport draftToHtml from \"draftjs-to-html\";\r\n\r\nimport Button from \"components/common/Button/Button\";\r\nimport Typography from \"components/Typography/Typography\";\r\n\r\nimport {\r\n  TextHtmlEditorContainer,\r\n  TextHtmlEditorButtons,\r\n} from \"./TextHtmlEditor.styled\";\r\n\r\nimport \"react-draft-wysiwyg/dist/react-draft-wysiwyg.css\";\r\n\r\nclass TextHtmlEditor extends Component<any> {\r\n  textArea: any;\r\n  copySuccess: boolean | undefined;\r\n\r\n  constructor(props: any) {\r\n    super(props);\r\n    this.state = {\r\n      editorState: EditorState.createEmpty(),\r\n      copySuccess: false,\r\n    };\r\n  }\r\n\r\n  onEditorStateChange: any = (editorState: string) => {\r\n    this.setState({\r\n      editorState,\r\n      copySuccess: false,\r\n    });\r\n  };\r\n\r\n  onClearButtonClick = () => {\r\n    this.setState({\r\n      editorState: EditorState.createEmpty(),\r\n      copySuccess: false,\r\n    });\r\n  };\r\n\r\n  onCopeButtonClick = () => {\r\n    this.textArea.select();\r\n    document.execCommand(\"copy\");\r\n    this.textArea.focus();\r\n    this.setState({ copySuccess: true });\r\n  };\r\n\r\n  render() {\r\n    const { editorState, copySuccess }: any = this.state;\r\n\r\n    return (\r\n      <TextHtmlEditorContainer>\r\n        <Editor\r\n          editorState={editorState}\r\n          wrapperClassName=\"demo-wrapper\"\r\n          editorClassName=\"demo-editor\"\r\n          onEditorStateChange={this.onEditorStateChange}\r\n        />\r\n        <textarea\r\n          value={draftToHtml(convertToRaw(editorState.getCurrentContent()))}\r\n          ref={(textarea) => (this.textArea = textarea)}\r\n          readOnly\r\n        />\r\n\r\n        <TextHtmlEditorButtons>\r\n          <Button\r\n            onClick={this.onClearButtonClick}\r\n            ariaLabel=\"Clear fields\"\r\n            styles={{ margin: 0, marginRight: 25 }}\r\n          >\r\n            Clear\r\n          </Button>\r\n\r\n          <Button\r\n            onClick={this.onCopeButtonClick}\r\n            ariaLabel=\"Copy\"\r\n            styles={{ margin: 0 }}\r\n          >\r\n            {copySuccess ? (\r\n              <Typography\r\n                styles={{\r\n                  fontSize: \"32px\",\r\n                }}\r\n              >\r\n                Copied&nbsp;&#10004;\r\n              </Typography>\r\n            ) : (\r\n              <Typography\r\n                styles={{\r\n                  fontSize: \"32px\",\r\n                }}\r\n              >\r\n                Copy&nbsp;&#9998;\r\n              </Typography>\r\n            )}\r\n          </Button>\r\n        </TextHtmlEditorButtons>\r\n      </TextHtmlEditorContainer>\r\n    );\r\n  }\r\n}\r\n\r\nexport default TextHtmlEditor;\r\n","import { FC } from \"react\";\r\n\r\nimport TextHtmlEditor from \"components/TextHtmlEditor/TextHtmlEditor\";\r\n\r\nconst EditorPage: FC<{}> = (): JSX.Element => {\r\n  return (\r\n    <div>\r\n      <TextHtmlEditor />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default EditorPage;\r\n"],"sourceRoot":""}